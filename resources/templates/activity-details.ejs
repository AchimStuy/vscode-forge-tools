<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://kit.fontawesome.com/8309329604.js"></script>
    <style>
        body {
            padding: 1em;
        }

        body, .table, .form-label, .form-check-label {
            color: var(--vscode-editor-foreground);
            background-color: var(--vscode-editor-background);
        }

        .form-control, .form-control:read-only, .form-check-input, .form-check-input:read-only {
            color: var(--vscode-input-foreground);
            background-color: var(--vscode-input-background);
            border-color: var(--vscode-input-border);
        }

        .form-control:disabled, .form-check-input:disabled {
            opacity: 0.75;
        }

        .table {
            margin-bottom: 0.5rem;
        }

        th.small {
            font-size: 0.5rem;
            width: 5%;
        }
    </style>
    <title>
        <% if (mode === 'read') { %>
            Activity: <%= id %>
        <% } else if (mode === 'create') { %>
            Create Activity
        <% } else if (mode === 'update') { %>
            Update Activity
        <% } %>
    </title>
</head>
<body>
    <form>
        <div class="form-group row">
            <!-- ID -->
            <label for="activity-id" class="col-sm-2 form-label">ID</label>
            <div class="col-sm-10">
                <% if (mode === 'read') { %>
                    <input type="text" id="activity-id" class="form-control" value="<%= id %>" placeholder="Activity Name" readonly>
                <% } else { %>
                    <input type="text" id="activity-id" class="form-control" value="<%= id %>" placeholder="Activity Name">
                <% } %>
            </div>
        </div>
        <div class="form-group row">
            <!-- Description -->
            <label for="activity-description" class="col-sm-2 form-label">Description</label>
            <div class="col-sm-10">
                <% if (mode === 'read') { %>
                    <input type="text" id="activity-description" class="form-control" value="<%= description %>" placeholder="Activity Description" readonly>
                <% } else { %>
                    <input type="text" id="activity-description" class="form-control" value="<%= description %>" placeholder="Activity Description">
                <% } %>
            </div>
        </div>
        <div class="form-group row">
            <!-- Engine -->
            <label for="activity-engine" class="col-sm-2 form-label">Engine</label>
            <div class="col-sm-10">
                <% if (mode === 'read') { %>
                    <input type="text" id="activity-engine" class="form-control" value="<%= engine %>" readonly>
                <% } else { %>
                    <select id="activity-engine" class="form-control">
                        <% for (const eng of options.engines) { %>
                            <% if (eng === engine) { %>
                                <option value="<%= eng %>" selected><%= eng %></option>
                            <% } else { %>
                                <option value="<%= eng %>"><%= eng %></option>
                            <% } %>
                        <% } %>
                    </select>
                <% } %>
            </div>
        </div>
        <div class="form-group row">
            <!-- Command Lines -->
            <label for="command-lines" class="col-sm-2 form-label">Command Lines</label>
            <div class="col-sm-10">                
                <table id="command-lines" class="table table-sm table-bordered">
                    <tbody>
                        <% for (const line of commandLine) { %>
                            <tr>
                                <% if (mode === 'read') { %>
                                    <td scope="col">
                                        <input type="text" name="command-line" class="form-control" value="<%= line %>" readonly>
                                    </td>
                                <% } else { %>
                                    <td style="width: 95%">
                                        <input type="text" name="command-line" class="form-control" value="<%= line %>" placeholder="Enter New Command">
                                    </td>
                                    <td style="width: 5%">
                                        <button type="button" name="preset-command-line" class="form-control btn btn-outline-success fas fa-magic" data-action="preset" title="Pre-generate initial command structure based on existing settings"></button>
                                    </td>
                                    <td style="width: 5%">
                                        <button type="button" name="remove-command-line" class="form-control btn btn-outline-danger fas fa-trash-alt" data-action="remove"></button>
                                    </td>
                                <% } %>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
                <% if (mode !== 'read') { %>
                    <button type="button" name="add-command-line" class="btn btn-outline-primary float-right"><i class="fas fa-plus-circle"></i> Command Line</button>
                <% } %>
            </div>
        </div>
        <div class="form-group row">
            <!-- Parameters -->
            <label for="parameters" class="col-sm-2 form-label">Parameters</label>
            <div class="col-sm-10">
                <table id="parameters" class="table table-sm table-bordered">
                    <thead>
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">Verb</th>
                            <th scope="col">Description</th>
                            <th scope="col">Local Name</th>
                            <th scope="col" class="small" title="Required">Req.</th>
                            <th scope="col" class="small" title="Zipped">Zip</th>
                            <th scope="col" class="small" title="On Demand">On Dem.</div></th>
                            <% if (mode !== 'read') { %>
                                <th style="width: 5%"></th>
                            <% } %>
                        </tr>
                    </thead>
                    <tbody>
                        <% for (const param of Object.keys(parameters)) { %>
                            <tr>
                                <% if (mode === 'read') { %>
                                    <td scope="row">
                                        <input type="text" name="param-name" class="form-control" value="<%= param %>" readonly>
                                    </td>
                                    <td>
                                        <input type="text" name="param-verb" class="form-control" value="<%= parameters[param].verb %>" readonly>
                                    </td>
                                    <td>
                                        <input type="text" name="param-desc" class="form-control" value="<%= parameters[param].description %>" readonly>
                                    </td>
                                    <td>
                                        <input type="text" name="param-local" class="form-control" value="<%= parameters[param].localName %>" readonly>
                                    </td>
                                    <td>
                                        <% if (parameters[param].required) { %>
                                            <input type="checkbox" name="param-required" class="form-control" checked disabled>
                                        <% } else { %>
                                            <input type="checkbox" name="param-required" class="form-control" disabled>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (parameters[param].zip) { %>
                                            <input type="checkbox" name="param-zip" class="form-control" checked disabled>
                                        <% } else { %>
                                            <input type="checkbox" name="param-zip" class="form-control" disabled>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (parameters[param].ondemand) { %>
                                            <input type="checkbox" name="param-ondemand" class="form-control" checked disabled>
                                        <% } else { %>
                                            <input type="checkbox" name="param-ondemand" class="form-control" disabled>
                                        <% } %>
                                    </td>
                                <% } else { %>
                                    <td>
                                        <input type="text" name="param-name" class="form-control" value="<%= param %>" placeholder="Parameter Name">
                                    </td>
                                    <td>
                                        <select name="param-verb" class="form-control">
                                            <% if (parameters[param].verb === 'get') { %><option value="get" selected>Get</option><% } else { %><option value="get">Get</option><% } %>
                                            <% if (parameters[param].verb === 'put') { %><option value="put" selected>Put</option><% } else { %><option value="put">Put</option><% } %>
                                            <% if (parameters[param].verb === 'post') { %><option value="post" selected>Post</option><% } else { %><option value="post">Post</option><% } %>
                                            <% if (parameters[param].verb === 'patch') { %><option value="patch" selected>Patch</option><% } else { %><option value="patch">Patch</option><% } %>
                                        </select>
                                    </td>
                                    <td>
                                        <input type="text" name="param-desc" class="form-control" value="<%= parameters[param].description %>" placeholder="Description">
                                    </td>
                                    <td>
                                        <input type="text" name="param-local" class="form-control" value="<%= parameters[param].localName %>" placeholder="Local Name">
                                    </td>
                                    <td>
                                        <% if (parameters[param].required) { %>
                                            <input type="checkbox" name="param-required" class="form-control" checked>
                                        <% } else { %>
                                            <input type="checkbox" name="param-required" class="form-control">
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (parameters[param].zip) { %>
                                            <input type="checkbox" name="param-zip" class="form-control" checked>
                                        <% } else { %>
                                            <input type="checkbox" name="param-zip" class="form-control">
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (parameters[param].ondemand) { %>
                                            <input type="checkbox" name="param-ondemand" class="form-control" checked>
                                        <% } else { %>
                                            <input type="checkbox" name="param-ondemand" class="form-control">
                                        <% } %>
                                    </td>
                                    <td>
                                        <button type="button" name="remove-parameter" class="form-control btn btn-outline-danger fas fa-trash-alt" data-action="remove"></button>
                                    </td>
                                <% } %>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
                <% if (mode !== 'read') { %>
                    <button type="button" name="add-parameter" class="btn btn-outline-primary float-right"><i class="fas fa-plus-circle"></i> Parameter</button>
                <% } %>
            </div>
        </div>
        <div class="form-group row">
            <!-- App Bundles -->
            <label for="appbundles" class="col-sm-2 form-label">App Bundles</label>
            <div class="col-sm-10">
                <table id="appbundles" class="table table-sm table-bordered">
                    <tbody>
                        <% for (const bundle of appbundles) { %>
                            <tr>
                                <% if (mode === 'read') { %>
                                    <td style="width: 100%">
                                        <input type="text" name="appbundle" class="form-control" value="<%= bundle %>" readonly>
                                    </td>
                                <% } else { %>
                                    <td style="width: 95%">
                                        <select name="appbundle" class="form-control">
                                            <% for (const appbundle of options.appBundles) { %>
                                                <% if (appbundle === bundle) { %>
                                                    <option value="<%= appbundle %>" selected><%= appbundle %></option>
                                                <% } else { %>
                                                    <option value="<%= appbundle %>"><%= appbundle %></option>
                                                <% } %>
                                            <% } %>
                                        </select>
                                    </td>
                                    <td style="width: 5%">
                                        <button type="button" name="remove-appbundle" class="form-control btn btn-outline-danger fas fa-trash-alt" data-action="remove"></button>
                                    </td>
                                <% } %>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
                <% if (mode !== 'read') { %>
                    <button type="button" name="add-appbundle" class="btn btn-outline-primary float-right"><i class="fas fa-plus-circle"></i> App Bundle</button>
                <% } %>
            </div>
        </div>
        <div class="form-group row">
            <div class="col">
                <% if (mode === 'create') { %>
                    <button type="button" id="create" class="btn btn-primary">Create</button>
                    <button type="button" id="cancel" class="btn btn-secondary">Cancel</button>
                <% } else if (mode === 'update') { %>
                    <button type="button" id="create" class="btn btn-primary">Update</button>
                    <button type="button" id="cancel" class="btn btn-secondary">Cancel</button>
                <% } %>
            </div>
        </div>
    </form>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <% if (mode !== 'read') { %>
        <script>
            function collectActivity() {
                let activity = {
                    id: $('#activity-id').val(),
                    description: $('#activity-description').val(),
                    engine: $('#activity-engine').val(),
                    commandLine: $("#command-lines input[name='command-line']").map(function() { return $(this).val(); }).get(),
                    appBundles: $("#appbundles select[name='appbundle']").map(function() { return $(this).val(); }).get(),
                    parameters: {}
                };

                $('#parameters > tbody > tr').each(function() {
                    const $row = $(this);
                    const name = $row.find("input[name='param-name']").val();
                    activity.parameters[name] = {
                        verb: $row.find("select[name='param-verb']").val(),
                        description: $row.find("input[name='param-desc']").val(),
                        localName: $row.find("input[name='param-local']").val(),
                        required: $row.find("input[name='param-required']")[0].checked,
                        zip: $row.find("input[name='param-zip']")[0].checked,
                        ondemand: $row.find("input[name='param-ondemand']")[0].checked
                    };
                });

                return activity;
            }

            function parseDesignAutomationID(id) {
                const d = id.indexOf('.'), p = id.indexOf('+');
                return {
                    owner: id.substr(0, d),
                    name: id.substr(d + 1, p - d - 1),
                    alias: id.substr(p)
                };
            }

            function commandLinePreset() {
                const activity = collectActivity();
                const engineId = parseDesignAutomationID(activity.engine);
                const firstInputName = Object.keys(activity.parameters).find(name => activity.parameters[name].verb === 'get');
                const firstBundle = activity.appBundles.length > 0 ? parseDesignAutomationID(activity.appBundles[0]) : undefined;
                // TODO: what's the command structure for additional inputs and app bundles?
                switch (engineId.name.toLowerCase()) {
                    case 'autocad':
                        return `$(engine.path)\\accoreconsole.exe ${firstInputName ? `/i $(args[${firstInputName}].path)` : ''} ${firstBundle ? `/al $(appbundles[${firstBundle.name}].path)` : ''}`;
                    case '3dsmax':
                        return `$(engine.path)/3dsmaxbatch.exe ${firstInputName ? `-sceneFile \"$(args[${firstInputName}].path)\"` : ''}`;
                    case 'revit':
                        return `$(engine.path)\\\\revitcoreconsole.exe ${firstInputName ? `/i $(args[${firstInputName}].path)` : ''} ${firstBundle ? `/al $(appbundles[${firstBundle.name}].path)` : ''}`;
                    case 'inventor':
                        return `$(engine.path)\\InventorCoreConsole.exe ${firstInputName ? `/i $(args[${firstInputName}].path)` : ''} ${firstBundle ? `/al $(appbundles[${firstBundle.name}].path)` : ''}`;
                }
                return '';
            }

            $("button[name='add-command-line']").click(function() {
                $('#command-lines > tbody').append(`
                    <tr>
                        <td style="width: 95%">
                            <input type="text" name="command-line" class="form-control" value="" placeholder="Enter New Command">
                        </td>
                        <td style="width: 5%">
                            <button type="button" name="preset-command-line" class="form-control btn btn-outline-success fas fa-magic" data-action="preset" title="Pre-generate command based on existing settings"></button>
                        </td>
                        <td style="width: 5%">
                            <button type="button" name="remove-command-line" class="form-control btn btn-outline-danger fas fa-trash-alt" data-action="remove"></button>
                        </td>
                    </tr>
                `);
            });
            $('#command-lines > tbody').click(function(ev) {
                const $target = $(ev.target);
                switch ($target.data('action')) {
                    case 'preset':
                        $target.closest('tr').find("input[name='command-line']").val(commandLinePreset());
                        break;
                    case 'remove':
                        $target.closest('tr').remove();
                        break;
                }
            });

            $("button[name='add-parameter']").click(function() {
                $('#parameters > tbody').append(`
                    <tr>
                        <td>
                            <input type="text" name="param-name" class="form-control" value="" placeholder="Parameter Name">
                        </td>
                        <td>
                            <select name="param-verb" class="form-control">
                                <option value="get">Get</option>
                                <option value="put">Put</option>
                                <option value="post">Post</option>
                                <option value="patch">Patch</option>
                            </select>
                        </td>
                        <td>
                            <input type="text" name="param-desc" class="form-control" value="" placeholder="Parameter Description">
                        </td>
                        <td>
                            <input type="text" name="param-local" class="form-control" value="" placeholder="Parameter Local Name">
                        </td>
                        <td>
                            <input type="checkbox" name="param-required" class="form-control">
                        </td>
                        <td>
                            <input type="checkbox" name="param-zip" class="form-control">
                        </td>
                        <td>
                            <input type="checkbox" name="param-ondemand" class="form-control">
                        </td>
                        <td>
                            <button type="button" name="remove-parameter" class="form-control btn btn-outline-danger fas fa-trash-alt" data-action="remove"></button>
                        </td>
                    </tr>
                `);
            });
            $('#parameters > tbody').click(function(ev) {
                const $target = $(ev.target);
                if ($target.data('action') === 'remove') {
                    $target.closest('tr').remove();
                }
            });

            $("button[name='add-appbundle']").click(function() {
                $('#appbundles > tbody').append(`
                    <tr>
                        <td style="width: 95%">
                            <select name="appbundle" class="form-control">
                                <% for (const appbundle of options.appBundles) { %>
                                    <option value="<%= appbundle %>"><%= appbundle %></option>
                                <% } %>
                            </select>
                        </td>
                        <td style="width: 5%">
                            <button type="button" name="remove-appbundle" class="form-control btn btn-outline-danger fas fa-trash-alt" data-action="remove"></button>
                        </td>
                    </tr>
                `);
            });
            $('#appbundles > tbody').click(function(ev) {
                const $target = $(ev.target);
                if ($target.data('action') === 'remove') {
                    $target.closest('tr').remove();
                }
            });

            const vscode = acquireVsCodeApi();
            $('#create').click(function() {
                const activity = collectActivity();
                vscode.postMessage({
                    command: 'create',
                    activity
                });
            });
            $('#cancel').click(function() {
                vscode.postMessage({ command: 'cancel' });
            });
        </script>
    <% } %>
</body>
</html>